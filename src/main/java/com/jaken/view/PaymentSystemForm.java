package com.jaken.view;

import com.jaken.database.Config;
import com.jaken.entity.Payment;
import com.jaken.repositories.PaymentRepository;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterJob;
import java.util.List;
import java.util.Objects;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 * @author Ari Susanto
 */
public class PaymentSystemForm extends javax.swing.JFrame {

    PaymentRepository payment;

    /**
     * Creates new form PaymentSystemForm
     */
    public PaymentSystemForm() {
        this.payment = new PaymentRepository(new Config());
        initComponents();
        showDataInTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        labelStudentId = new javax.swing.JLabel();
        textStudentId = new javax.swing.JTextField();
        labelStudentName = new javax.swing.JLabel();
        textStudentName = new javax.swing.JTextField();
        labelPayment = new javax.swing.JLabel();
        textClass = new javax.swing.JTextField();
        labelClass = new javax.swing.JLabel();
        labelMajor = new javax.swing.JLabel();
        labelJumlah = new javax.swing.JLabel();
        textJumlah = new javax.swing.JTextField();
        comboBoxPayment = new javax.swing.JComboBox<>();
        comboBoxMajor = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTitle.setText("SISTEM PEMBAYARAN SPP SMP JAKENAN");

        labelStudentId.setLabelFor(textStudentId);
        labelStudentId.setText("ID Siswa : ");

        textStudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStudentIdActionPerformed(evt);
            }
        });

        labelStudentName.setLabelFor(textStudentName);
        labelStudentName.setText("Nama Siswa :");

        textStudentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStudentNameActionPerformed(evt);
            }
        });

        labelPayment.setLabelFor(comboBoxPayment);
        labelPayment.setText("Pembayaran :");

        textClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClassActionPerformed(evt);
            }
        });

        labelClass.setLabelFor(textClass);
        labelClass.setText("Kelas :");

        labelMajor.setLabelFor(comboBoxMajor);
        labelMajor.setText("Jurusan : ");

        labelJumlah.setLabelFor(textJumlah);
        labelJumlah.setText("Jumlah :");

        textJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textJumlahActionPerformed(evt);
            }
        });

        comboBoxPayment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Pilih", "Tunai", "Transfer", "Pay Later"}));

        comboBoxMajor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Pilih", "IPA", "IPS"}));

        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null}
                },
                new String[]{
                        "Identity", "Nama Siswa", "Kelas", "Jurusan", "Pembayaran", "Jumlah"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        paymentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(paymentTable);

        btnSave.setText("Simpan");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Ubah");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnPrint.setText("Cetak");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(262, 262, 262)
                                                .addComponent(labelTitle))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(95, 95, 95)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(labelClass)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(textClass, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(labelStudentId)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(textStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(labelPayment)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(comboBoxPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(btnSave)
                                                                .addGap(83, 83, 83)
                                                                .addComponent(btnDelete)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(116, 116, 116)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(labelMajor, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(labelStudentName))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(comboBoxMajor, 0, 155, Short.MAX_VALUE)
                                                                                        .addComponent(textStudentName)))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(labelJumlah)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addComponent(textJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addGap(96, 96, 96)
                                                                .addComponent(btnUpdate)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(btnPrint)
                                                                .addGap(8, 8, 8)))))
                                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(labelTitle)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelStudentId)
                                        .addComponent(textStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelStudentName)
                                        .addComponent(textStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelClass)
                                        .addComponent(textClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelMajor)
                                        .addComponent(comboBoxMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(comboBoxPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(labelPayment)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(textJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(labelJumlah))))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdate)
                                        .addComponent(btnPrint)
                                        .addComponent(btnSave))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(281, Short.MAX_VALUE))
        );

        pack();
    }

    private void textStudentIdActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void textStudentNameActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void textClassActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void textJumlahActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {
        PrinterJob printerJob = PrinterJob.getPrinterJob();

        if (printerJob.printDialog()) {
            JOptionPane.showMessageDialog(this, "Printer sedang disiapkan, Mohon Menunggu...", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            Timer timer = new Timer(3000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    JOptionPane.showMessageDialog(null, "Cetak berhasil!");
                }
            });
            timer.setRepeats(false);
            timer.start();
        } else {
            JOptionPane.showMessageDialog(this, "Printer tidak tersedia!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {
        String studentId = textStudentId.getText();
        String studentName = textStudentName.getText();
        String studentClass = textClass.getText();
        String studentMajor = comboBoxMajor.getSelectedItem().toString();
        String paymentType = comboBoxPayment.getSelectedItem().toString();
        String paymentAmount = textJumlah.getText();

        if (studentId.isEmpty() || studentName.isEmpty() || studentClass.isEmpty() || studentMajor.equals("Pilih") || paymentType.equals("Pilih") || paymentAmount.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mohon lengkapi semua bidang!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                this.payment.createPayment(new Payment(Integer.parseInt(studentId), studentName, studentClass, studentMajor, paymentType, Integer.valueOf(paymentAmount)));

                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!", "Success", JOptionPane.INFORMATION_MESSAGE);

                textStudentId.setText("");
                textStudentName.setText("");
                textClass.setText("");
                comboBoxMajor.setSelectedIndex(0);
                comboBoxPayment.setSelectedIndex(0);
                textJumlah.setText("");

                showDataInTable();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Jumlah pembayaran harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        String studentId = textStudentId.getText();
        if (Objects.equals(studentId, "")) {
            JOptionPane.showMessageDialog(this, "Pastikan untuk memilih data yang valid", "Invalid Action", JOptionPane.INFORMATION_MESSAGE);
        }
        Integer result = this.payment.deletePayment(Integer.valueOf(studentId));
        if (result == 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        textStudentId.setText("");
        textStudentName.setText("");
        textClass.setText("");
        textJumlah.setText("");
        comboBoxMajor.setSelectedIndex(0);
        comboBoxPayment.setSelectedIndex(0);
        showDataInTable();
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {
        String studentId = textStudentId.getText();
        if(Objects.equals(studentId, "")) {
            JOptionPane.showMessageDialog(this, "Pastikan untuk memilih data yang valid", "Invalid Action", JOptionPane.INFORMATION_MESSAGE);
        }
        String studentName = textStudentName.getText();
        String className = textClass.getText();
        String major = comboBoxMajor.getSelectedItem().toString();
        String paymentMethod = comboBoxPayment.getSelectedItem().toString();
        Integer amount = Integer.valueOf(textJumlah.getText());

        this.payment.updatePayment(new Payment(Integer.parseInt(studentId), studentName, className, major, paymentMethod, amount));


        JOptionPane.showMessageDialog(null, "Data berhasil diperbarui.");


        textStudentId.setText("");
        textStudentName.setText("");
        textClass.setText("");
        textJumlah.setText("");
        comboBoxMajor.setSelectedIndex(0);
        comboBoxPayment.setSelectedIndex(0);

        showDataInTable();

    }

    private void paymentTableMouseClicked(java.awt.event.MouseEvent evt) {

        int selectedRow = paymentTable.getSelectedRow();

        if (selectedRow >= 0) {
            String studentId = paymentTable.getValueAt(selectedRow, 0).toString();
            String studentName = paymentTable.getValueAt(selectedRow, 1).toString();
            String className = paymentTable.getValueAt(selectedRow, 2).toString();
            String major = paymentTable.getValueAt(selectedRow, 3).toString();
            String paymentMethod = paymentTable.getValueAt(selectedRow, 4).toString();
            Integer amount = Integer.valueOf(paymentTable.getValueAt(selectedRow, 5).toString());

            textStudentId.setText(studentId);
            textStudentName.setText(studentName);
            textClass.setText(className);
            textJumlah.setText(String.valueOf(amount));

            if (major.equals("IPA")) {
                comboBoxMajor.setSelectedIndex(1);
            } else if (major.equals("IPS")) {
                comboBoxMajor.setSelectedIndex(2);
            } else {
                comboBoxMajor.setSelectedIndex(0);
            }

            if (paymentMethod.equals("Tunai")) {
                comboBoxPayment.setSelectedIndex(1);
            } else if (paymentMethod.equals("Transfer")) {
                comboBoxPayment.setSelectedIndex(2);
            } else if (paymentMethod.equals("Pay Later")) {
                comboBoxPayment.setSelectedIndex(3);
            } else {
                comboBoxPayment.setSelectedIndex(0);
            }
        }

    }

    private void showDataInTable() {
        DefaultTableModel model = (DefaultTableModel) paymentTable.getModel();
        model.setRowCount(0);

        List<Payment> dataList = this.payment.findAllPayments();
        for (Payment data : dataList) {
            Integer idSiswa = data.getStudentId();
            String namaSiswa = data.getStudentName();
            String kelas = data.getStudentClass();
            String jurusan = data.getMajor();
            String pembayaran = data.getPaymentMethod();
            Integer total = data.getAmount();

            model.addRow(new Object[]{idSiswa, namaSiswa, kelas, jurusan, pembayaran, total});
        }
    }

    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboBoxMajor;
    private javax.swing.JComboBox<String> comboBoxPayment;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelClass;
    private javax.swing.JLabel labelJumlah;
    private javax.swing.JLabel labelMajor;
    private javax.swing.JLabel labelPayment;
    private javax.swing.JLabel labelStudentId;
    private javax.swing.JLabel labelStudentName;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTable paymentTable;
    private javax.swing.JTextField textClass;
    private javax.swing.JTextField textJumlah;
    private javax.swing.JTextField textStudentId;
    private javax.swing.JTextField textStudentName;
}
